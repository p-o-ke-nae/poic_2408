<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BUTTON_ADD" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="BUTTON_COPY" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="BUTTON_DELETE" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="BUTTON_OVERWRITE" xml:space="preserve">
    <value>上書き</value>
  </data>
  <data name="BUTTON_SCREENSHOT" xml:space="preserve">
    <value>PrtSc</value>
  </data>
  <data name="BUTTON_SCREENSHOTMATCH" xml:space="preserve">
    <value>PrtScMatch</value>
  </data>
  <data name="BUTTON_STARTSTOP" xml:space="preserve">
    <value>開始/停止</value>
  </data>
  <data name="FORMAT_KEYVALUE" xml:space="preserve">
    <value>{0}:{1}</value>
  </data>
  <data name="FORMAT_RATE" xml:space="preserve">
    <value>{0}%</value>
  </data>
  <data name="MESS_ERROR1" xml:space="preserve">
    <value>画像認識に失敗しました</value>
  </data>
  <data name="MESS_ERROR10" xml:space="preserve">
    <value>キー名を入力してください</value>
  </data>
  <data name="MESS_ERROR11" xml:space="preserve">
    <value>ビューアの表示か後処理でエラーが発生しました</value>
  </data>
  <data name="MESS_ERROR12" xml:space="preserve">
    <value>プラグインを読み込めませんでした</value>
  </data>
  <data name="MESS_ERROR13" xml:space="preserve">
    <value>設定を読み込めませんでした</value>
  </data>
  <data name="MESS_ERROR2" xml:space="preserve">
    <value>文字認識に失敗しました</value>
  </data>
  <data name="MESS_ERROR3" xml:space="preserve">
    <value>画像認識後の処理を実行できませんでした</value>
  </data>
  <data name="MESS_ERROR4" xml:space="preserve">
    <value>画像のキャプチャに失敗しました</value>
  </data>
  <data name="MESS_ERROR5" xml:space="preserve">
    <value>画像認識後の処理が正常に実装されていません</value>
  </data>
  <data name="MESS_ERROR6" xml:space="preserve">
    <value>画像処理に失敗しました</value>
  </data>
  <data name="MESS_ERROR7" xml:space="preserve">
    <value>{0}を取得できませんでした</value>
  </data>
  <data name="MESS_ERROR8" xml:space="preserve">
    <value>画像がセットされていません</value>
  </data>
  <data name="MESS_ERROR9" xml:space="preserve">
    <value>プラグインの設定を読み込めませんでした</value>
  </data>
  <data name="STRING_BOTTOM" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="STRING_CAPTURENO" xml:space="preserve">
    <value>キャプチャNo</value>
  </data>
  <data name="STRING_CHARACTERRECOGNITION" xml:space="preserve">
    <value>文字認識</value>
  </data>
  <data name="STRING_DEFAULT" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="STRING_FPS" xml:space="preserve">
    <value>FPS</value>
  </data>
  <data name="STRING_HEIGHT" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="STRING_IMAGEPROCESSING" xml:space="preserve">
    <value>画像処理</value>
  </data>
  <data name="STRING_IMAGERECOGNITION" xml:space="preserve">
    <value>画像認識</value>
  </data>
  <data name="STRING_KEYNAME" xml:space="preserve">
    <value>キー名</value>
  </data>
  <data name="STRING_LEFT" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="STRING_MATCHRATE" xml:space="preserve">
    <value>一致率</value>
  </data>
  <data name="STRING_OBSERVATION" xml:space="preserve">
    <value>観測</value>
  </data>
  <data name="STRING_REFPS" xml:space="preserve">
    <value>実FPS</value>
  </data>
  <data name="STRING_RIGHT" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="STRING_SETTINGS" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="STRING_TOP" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="STRING_TOPMOST" xml:space="preserve">
    <value>最前面に表示</value>
  </data>
  <data name="STRING_VIDEOCAPTURE" xml:space="preserve">
    <value>映像ソース</value>
  </data>
  <data name="STRING_VIEWER" xml:space="preserve">
    <value>ビューア</value>
  </data>
  <data name="STRING_WIDTH" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="STRING_X" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="STRING_Y" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="TOOL_CODE" xml:space="preserve">
    <value>poic_2408</value>
  </data>
  <data name="TOOL_NAME" xml:space="preserve">
    <value>p-GART</value>
  </data>
</root>